Note: Do closely observe the javascript and don't forget to open the inspect element as well, Closely analyzing the response and behavior of the application is another 
move for successful OTP bypass. 

### 1 ###
Request and response manipulation
There might be a case where:
# Sometimes they might reveal the otp in the javascript of web-source code
# They might even send the entered otp and correct otp in the request as a hash 
# Very important to closely observe the response they tend to reveal the opt
# Manipulation of response is a very common method that does look or sign like otp: false, otp: 1, status: false, etc
For reference: https://infosecwriteups.com/behind-the-scenes-discovering-an-otp-leakage-bug-in-a-leading-broadband-services-website-480e0440394e

### 2 ###
Brute-Forcing
- Do check for the rate limit and OTP expiry time and try to brute force, depending on those elements

### 3 ###
Observe the pattern
-Sometimes there might be a pattern in how the otp is generated thus figuring out that can narrow down the payloads for brute-forcing attack or even helps us to guess the OTP
For reference: https://medium.com/@itachiuchiha11/from-login-panels-to-victory-the-story-of-my-first-account-takeover-fd8ed6874478

1. Response Manipulation
In response if "success":false
 Change it to "success":true

 2. Status Code Manipulation
If Status Code is 4xx
Try to change it to 200 OK and see if it bypass restrictions

3. 2FA Code Leakage in Response
Check the response of the 2FA Code Triggering Request to see if the code is leaked.

4.JS File Analysis
Rare but some JS Files may contain info about the 2FA Code, worth giving a shot

5.2FA Code Reusability
Same code can be reused

6.Lack of Brute-Force Protection
Possible to brute-force any length 2FA Code

7.Missing 2FA Code Integrity Validation
Code for any user account can be used to bypass the 2FA

8.CSRF on 2FA Disabling
No CSRF Protection on disabling 2FA, also there is no auth confirmation

9. Password Reset Disable 2FA
2FA gets disabled on password change/email change

10.Backup Code Abuse
Bypassing 2FA by abusing the Backup code feature
Use the above mentioned techniques to bypass Backup Code to remove/reset 2FA reset restrictions

11.Clickjacking on 2FA Disabling Page
Iframing the 2FA Disabling page and social engineering victim to disable the 2FA

12.Iframing the 2FA Disabling page and social engineering victim to disable the 2FA
If the session is already hijacked and there is a session timeout vulnerbility

13.Bypass 2FA with null or 000000
Enter the code 000000 or null to bypass 2FA protection.

Steps:-
1. Enter “null” in 2FA code
2. Enter 000000 in 2FA code
3. Send empty code - Someone found this in grammarly
4. Open new tab in same browser and check if other API endpoints are accessible without entering 2FA

14. Google Authenticator Bypass
Steps:-
1) Set-up Google Authenticator for 2FA
2) Now, 2FA is enabled
3) Go on password reset page and change your password
4) If you are website redirect you to your dashboard then 2FA (Google Authenticator) is bypassed

15. Bypassing OTP in registration forms by repeating the form submission multiple times using repeater
Steps :-
1) Create an account with a non-existing phone number
2) Intercept the Request in BurpSuite
3) Send the request to the repeater and forward
4) Go to Repeater tab and change the non-existent phone number to your phone number
5) If you got an OTP to your phone, try using that OTP to register that non-existent number


----------------
1. Response Manipulation
In response if "success":false
 Change it to "success":true

 2. Status Code Manipulation
If Status Code is 4xx
Try to change it to 200 OK and see if it bypass restrictions

3. 2FA Code Leakage in Response
Check the response of the 2FA Code Triggering Request to see if the code is leaked.

4.JS File Analysis
Rare but some JS Files may contain info about the 2FA Code, worth giving a shot

5.2FA Code Reusability
Same code can be reused

6.Lack of Brute-Force Protection
Possible to brute-force any length 2FA Code

7.Missing 2FA Code Integrity Validation
Code for any user account can be used to bypass the 2FA

8.CSRF on 2FA Disabling
No CSRF Protection on disabling 2FA, also there is no auth confirmation

9. Password Reset Disable 2FA
2FA gets disabled on password change/email change

10.Backup Code Abuse
Bypassing 2FA by abusing the Backup code feature
Use the above mentioned techniques to bypass Backup Code to remove/reset 2FA reset restrictions

11.Clickjacking on 2FA Disabling Page
Iframing the 2FA Disabling page and social engineering victim to disable the 2FA

12.Iframing the 2FA Disabling page and social engineering victim to disable the 2FA
If the session is already hijacked and there is a session timeout vulnerbility

13.Bypass 2FA with null or 000000
Enter the code 000000 or null to bypass 2FA protection.

Steps:-
1. Enter “null” in 2FA code
2. Enter 000000 in 2FA code
3. Send empty code - Someone found this in grammarly
4. Open new tab in same browser and check if other API endpoints are accessible without entering 2FA

14.Google Authenticator Bypass
Steps:-
1) Set-up Google Authenticator for 2FA
2) Now, 2FA is enabled
3) Go on password reset page and change your password
4) If you are website redirect you to your dashboard then 2FA (Google Authenticator) is bypassed

15. Bypassing OTP in registration forms by repeating the form submission multiple times using repeater
Steps :-
1) Create an account with a non-existing phone number
2) Intercept the Request in BurpSuite
3) Send the request to the repeater and forward
4) Go to Repeater tab and change the non-existent phone number to your phone number
5) If you got an OTP to your phone, try using that OTP to register that non-existent number

================================================================================================================
🎯𝟮𝗙𝗔 𝗧𝗲𝘀𝘁𝗶𝗻𝗴 𝗧𝗶𝗽𝘀 𝗳𝗼𝗿 𝗕𝘂𝗴 𝗕𝗼𝘂𝗻𝘁𝘆 𝗛𝘂𝗻𝘁𝗲𝗿𝘀

1. Status Code Changes 
 Check if altering response or status codes (e.g., 200, 403) during 2FA verification allows bypass.

2. Brute-Force OTP 
 Test if the application allows repeated attempts to guess OTPs without blocking.

3. OTP Reuse 
 Verify if the OTP can be reused after it's already been used once.

4. Cross-Account Token Test 
 Request two OTPs for different accounts and see if you can use one account's OTP in another account.

5. Direct Dashboard Access 
 Try accessing the dashboard URL directly without completing 2FA. If blocked, include the 2FA page as a referrer header and retry.

6. Search for 2FA Codes 
 Use tools like Burp Suite to search response or JavaScript files for exposed 2FA codes.

7. CSRF/Clickjacking on 2FA 
 Test if attackers can disable 2FA using CSRF (cross-site request forgery) or clickjacking attacks.

8. Session Persistence 
 Check if enabling 2FA logs out all active sessions. If not, report it.

9. OAuth 2FA Bypass 
 See if using OAuth logins bypasses the need for 2FA. (This is rare.)

10. Disabling 2FA Without Verification 
 Test if 2FA can be disabled without entering a 2FA code.

11. Password Reset Without 2FA 
 Try resetting the account password using "Forgot Password" to bypass 2FA.

12. Test 000000 OTP 
 Enter "000000" (or similar default codes) to see if the app accepts it as a valid OTP.

13. Request Manipulation 
 Manipulate JSON requests to bypass 2FA:
 - Send a null value.
 - Change `"otprequired": true` to `false`.
 - Remove the 2FA-related code or parameter.
 - Use unexpected inputs (e.g., an email as an array).

14. OpenID Misconfiguration 
 Test for misconfigurations in OpenID that might allow bypassing 2FA.

15. OTP Expiry Check 
 Verify if OTPs remain valid for an excessive amount of time (e.g., more than a few minutes).

16. Backup Code Abuse 
 After logging in, generate a backup code request and check if it leaks valid codes.

17. Sensitive Info Exposure 
 Check if the 2FA page reveals sensitive information (e.g., phone numbers or email addresses).

18. Permanent Denial of Service (DoS) on Accounts 
 Abuse the system to lock an account:
 - Create an account with someone else's email (if email verification isn't required) and enable 2FA.
 - If verification is required, use a verified account to enable 2FA, then change the email to the victim's.

19. Authenticated Actions Without 2FA 
 Test if you can perform authenticated actions (e.g., update profile, create API tokens) without solving 2FA.

20. Bulk OTP Testing in JSON 
 Send multiple OTP values in a single request:
 ```json
 {
 "code": ["1000", "1001", "1002", ..., "9999"]
 }
 ```

21. Backup Code Misuse 
 Explore any other ways to misuse or generate backup codes.
===================================================================================================

Cybertix Cybertix . Cybersecurity and Infrastructure Security Agency 
